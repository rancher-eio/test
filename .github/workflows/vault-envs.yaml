name: Vault Env Tests
on:
  workflow_call:
    inputs:
      container:
        default: ubuntu:22.04
        required: false
        type: string
      runs-on:
        default: ubuntu-22.04
        required: false
        type: string
      from-secret:
        type: string
        default: secret/data/github-actions/test
        required: false
      read-key: 
        type: string
        default: status
        required: false
      export-as:
        type: string
        default: PROOF_OF_CONCEPT
        required: false
      expected-value:
        type: string
        default: success
        required: false
  workflow_dispatch:
    inputs:
      runs-on:
        default: ubuntu-latest
        required: false
        type: string
      from-secret:
        type: string
        default: secret/data/github-actions/test
        required: false
      read-key: 
        type: string
        default: status
        required: false
      export-as:
        type: string
        default: PROOF_OF_CONCEPT
        required: false
      expected-value:
        type: string
        default: success
        required: false
jobs:
  fetch-secrets:
      permissions:
        contents: read
        id-token: write
      runs-on: ${{ inputs.runs-on }}
      container: ${{ inputs.container }}
      outputs: 
        PROOF_OF_CONCEPT: ${{ steps.fetch-secret.outputs.PROOF_OF_CONCEPT }}
      steps:
      - id: fetch-secret
        uses: rancher-eio/read-vault-secrets@test-envs
        with:
          secrets: |
            secret/data/github-actions/test status | PROOF_OF_CONCEPT
            
      - name: Debug Output from Previous Step
        run: |
          echo "Output received from previous step:"
          test "${{ env[inputs.export-as] }}" = "${{ inputs.expected-value }}"
        
        
  use-secrets:
    runs-on: ${{ inputs.runs-on }}
    container: ${{ inputs.container }}
    needs: [fetch-secrets]
    permissions:
      contents: read
    # env:
    #   PROOF_OF_CONCEPT: ${{ needs.fetch-secrets.outputs.PROOF_OF_CONCEPT }}
    steps:
      - name: Validate that env variables are empty
        run: |
          echo "Output received from previous step:"
          test "${{ env[inputs.export-as] }}" = ""
          echo "Env variable PROOF_OF_CONCEPT should not be set"
          
      - name: Validate Secret
        run: |
          test "${{ needs.fetch-secrets.outputs.PROOF_OF_CONCEPT }}" = "${{ inputs.expected-value }}"
