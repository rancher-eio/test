---
name: Vault Variety Show

on:
  push:
    branches:
    - main
    paths:
    - .github/actions/read-vault-secrets/action.yml
    - .github/workflows/vault-variety-show.yaml

jobs:
  fetch:
    permissions:
      contents: read
      id-token: write
    runs-on: ubuntu-24.04
    outputs:
      secrets: ${{ steps.fetch.outputs.secrets }}
    steps:
    - id: fetch
      uses: rancher-eio/read-vault-secrets@unstable
      with:
        maskJSON: "false"
        maskSecrets: "false"
        secrets: |
          secret/data/github-actions/test status | FOO ;
          secret/data/github-actions/test status | BAR
    - name: ENV does not contain secrets
      run: test -z "${FOO}" && test -z "${BAR}"
    - name: VAULT_TOKEN is empty
      run: test -z "${VAULT_TOKEN}"
    - name: secrets are available as outputs
      run: |
        true \
        && test "${{ fromJSON(steps.fetch.outputs.secrets).FOO }}" = "success" \
        && test "${{ fromJSON(steps.fetch.outputs.secrets).BAR }}" = "success"
  next:
    runs-on: ubuntu-24.04
    needs:
    - fetch
    steps:
    - name: ENV does not contain secrets
      run: test -z "${FOO}" && test -z "${BAR}"
    - name: VAULT_TOKEN is empty
      run: test -z "${VAULT_TOKEN}"
    - name: ACTIONS_ID_TOKEN_REQUEST_TOKEN is empty
      run: test -z "${ACTIONS_ID_TOKEN_REQUEST_TOKEN}"
    - name: secrets are available as outputs
      run: |
        true \
        && test "${{ needs.fetch.outputs.FOO }}" = "success" \
        && test "${{ needs.fetch.outputs.BAR }}" = "success"
    - name: secrets are available as JSON outputs
      run: |
        true \
        && test "${{ fromJSON(needs.fetch.outputs.secrets).FOO }}" = "success" \
        && test "${{ fromJSON(needs.fetch.outputs.secrets).BAR }}" = "success"
