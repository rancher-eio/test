name: Vault Secret Isolation Test
on:
  workflow_call:
    inputs:
      container:
        default: ubuntu:22.04
        required: false
        type: string
      runs-on:
        default: ubuntu-22.04
        required: false
        type: string
      from-secret:
        type: string
        default: secret/data/github-actions/test
        required: false
      read-key: 
        type: string
        default: status
        required: false
      export-as:
        type: string
        default: PROOF_OF_CONCEPT
        required: false
      expected-value:
        type: string
        default: success
        required: false
  workflow_dispatch:
    inputs:
      runs-on:
        default: ubuntu-latest
        required: false
        type: string
      from-secret:
        type: string
        default: secret/data/github-actions/test
        required: false
      read-key: 
        type: string
        default: status
        required: false
      export-as:
        type: string
        default: PROOF_OF_CONCEPT
        required: false
      expected-value:
        type: string
        default: success
        required: false
jobs:
  fetch-secrets:
      permissions:
        contents: read
        id-token: write
      runs-on: ${{ inputs.runs-on }}
      container: ${{ inputs.container }}
      outputs: 
        secret_values: ${{ steps.fetch-secret.outputs.vault_data }}
      steps:
      - id: fetch-secret
        uses: rancher-eio/read-vault-secrets@isolation
        with:
          secrets: |
            secret/data/github-actions/test status | PROOF_OF_CONCEPT
      - name: Debug Output
        run: |
          echo "Direct output access check:"
          PROOF_OF_CONCEPT=$(echo '${{ steps.fetch-secret.outputs.vault_data }}' | jq -r '.PROOF_OF_CONCEPT')
          echo "PROOF_OF_CONCEPT key: $PROOF_OF_CONCEPT value"
          
  use-secrets:
    runs-on: ${{ inputs.runs-on }}
    container: ${{ inputs.container }}
    needs: [fetch-secrets]
    permissions:
      contents: read
    steps:
      - name: Debug Output from Previous Job
        run: |
          echo "Output received from previous job:"
          echo "Raw value: '${{ needs.fetch-secrets.outputs.vault_data }}'"
      
      - name: Validate Secret
        run: |
          PROOF_OF_CONCEPT=$(echo '${{ needs.fetch-secrets.outputs.vault_data }}' | jq -r '.PROOF_OF_CONCEPT')
          if [ "$PROOF_OF_CONCEPT" = "${{ inputs.expected-value }}" ]; then
            echo "✅ Secret validation successful"
          else
            echo "❌ Secret validation failed"
            exit 1
          fi
