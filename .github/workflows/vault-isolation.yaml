name: Vault Secret Isolation Test
on:
  workflow_call:
    inputs:
      container:
        default: ubuntu:22.04
        required: false
        type: string
      runs-on:
        default: ubuntu-22.04
        required: false
        type: string
      from-secret:
        type: string
        default: secret/data/github-actions/test
        required: false
      read-key: 
        type: string
        default: status
        required: false
      export-as:
        type: string
        default: PROOF_OF_CONCEPT
        required: false
      expected-value:
        type: string
        default: success
        required: false
  workflow_dispatch:
    inputs:
      runs-on:
        default: ubuntu-latest
        required: false
        type: string
      from-secret:
        type: string
        default: secret/data/github-actions/test
        required: false
      read-key: 
        type: string
        default: status
        required: false
      export-as:
        type: string
        default: PROOF_OF_CONCEPT
        required: false
      expected-value:
        type: string
        default: success
        required: false
        
jobs:
  fetch-secrets:
    permissions:
      contents: read
      id-token: write
    runs-on: ${{ inputs.runs-on }}
    container: ${{ inputs.container }}
    outputs: 
      ${{ inputs.export-as }: ${{ steps.vault.outputs.${{ inputs.export-as } }}
    steps:
    - id: vault
      uses: rancher-eio/read-vault-secrets@isolation
      with:
        secrets: |
           ${{ inputs.from-secret }} ${{ inputs.read-key }} | ${{ inputs.export-as }}
          
    - name: Debug Output
      run: |
        echo "proof_of_concept: ${{ steps.vault.outputs.${{ inputs.export-as } }}"
          
  test:  
    runs-on: ${{ inputs.runs-on }}
    container: ${{ inputs.container }}
    permissions:
      contents: read 
    needs: fetch-secrets
    steps:
      - id: validate
        name: Validate Secrets
        # env:
        #   PROOF_OF_CONCEPT: ${{needs.fetch-secrets.outputs.proof_of_concept}}
        run: |
          test "${{ needs.fetch-secrets.outputs.${{ inputs.export-as } }}" = "success"
          #test "${{ env.PROOF_OF_CONCEPT }}" = "success"
         
      - id: validate_empty_env
        name: Check for OIDC Tokens
        run: |
          test -z "${ACTIONS_ID_TOKEN_REQUEST_TOKEN}"
          
      # - id: empty_env_session
      #   run: |
      #     export ACTIONS_ID_TOKEN_REQUEST_TOKEN=""
      #     test -z "${ACTIONS_ID_TOKEN_REQUEST_TOKEN}"
          
      # - id: validate_empty_env_session
      #   run: |
      #     test -z "${ACTIONS_ID_TOKEN_REQUEST_TOKEN}"
