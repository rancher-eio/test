---
name: Decrypt Vault Secrets
description: "Decrypts secrets encrypted by the Read Vault Secrets action"
inputs:
  encrypted_secrets:
    description: "The encrypted secrets JSON from the vault action"
    required: true
outputs:
  secrets:
    description: "Decrypted secrets JSON"
    value: ${{ steps.decrypt.outputs.secrets }}
runs:
  using: composite
  steps:
    - name: GitHub Script
      uses: actions/github-script@v7
      id: decrypt
      with:
        script: |
          const crypto = require('crypto');
          try {
            const encKey = process.env.CI_ENCRYPTION_KEY;
            if (!encKey) {
              throw new Error('CI_ENCRYPTION_KEY secret is required for decryption');
            }
            const encrypted = '${{ inputs.encrypted_secrets }}';
            const [ivHex, encryptedData] = encrypted.split(':');
            const iv = Buffer.from(ivHex, 'hex');
            const key = Buffer.from(encKey, 'hex');
            const decipher = crypto.createDecipheriv('aes-256-cbc', key, iv);
            let decrypted = decipher.update(encryptedData, 'hex', 'utf8');
            decrypted += decipher.final('utf8');
        
            const secretsObj = JSON.parse(decrypted);
            core.setOutput('secrets', JSON.stringify(secretsObj));
            for (const [key, value] of Object.entries(secretsObj)) {
              core.setOutput(key, value);
            }
            console.log('Secrets successfully decrypted');
          } catch (error) {
            core.setFailed(`Decryption failed: ${error.message}`);
          }
